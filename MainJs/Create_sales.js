$(document).ready(function () {    var SelectCounter_id = 1;    var Price_counter_id = 1;    var Quantity_counter_id = 1;    var date_counter_id = 1;    var branchId = 1;    var Employee_1 = 1;    var container = $('#adding_product_con');    const Today = new Date().toISOString().split('T')[0];    // Function to dynamically create product options    function createProductOptions(data) {        let options = `<option selected>Select Product</option>`;        data.forEach(pro => {            options += `<option value="${pro.product_id}">${pro.product_name}</option>`;        });        return options;    }    // Fetch products from the server    function fetchProducts() {        return fetch('../data_sale.php')            .then(response => response.json())            .then(data => {                return createProductOptions(data);            })            .catch(error => {                console.error('Error fetching products:', error);            });    }    var branch = '';    // Fetch the session data first    fetch('../Passing_Session_to_js_file.php')        .then(res => res.json())        .then(data => {            branch = data;        })        .catch(error => {            console.error('Error fetching session data:', error);        });    // Add more products on button click    $('#add_more').click(function () {        fetchProducts().then(productOptions => {            // Creating element div            var ElementDiv = document.createElement('div');            ElementDiv.classList.add('mt-3');            ElementDiv.innerHTML = `                <div class="d-flex card border-0 bg-transparent gap-3 flex-column bg-transparent">                    <!--hidden input to grab the branch -->                    <input type="text" value="${branch}" style="display: none" id="branch_${++branchId}">                    <div class="card-header bg-transparent d-flex align-items-end justify-content-end">                        <button id="btn_delete" class="btn text-danger">                            <i class="fa-solid fa-trash"></i>                        </button>                    </div>                    <select id="product_${++SelectCounter_id}" class="form-select" aria-label="Default select example">                        ${productOptions}                    </select>                    <div id="con_product_info_${SelectCounter_id}" class="mt-2"></div>                    <label for="Employee Name">                        <input id="Employee_${Employee_1}" class="form-control" type="text" placeholder="Employee Name">                    </label>                </div>            `;            container.append(ElementDiv);            // Attach change event to the newly added product dropdown            $(`#product_${SelectCounter_id}`).change(function (event) {                $.ajax({                    url: "../Data_Sales/Get_product_info.php",                    type: "post",                    dataType: 'json',                    encode: true,                    data: { product_Id: event.target.value },                    success: function (data) {                        // Populate the dynamic fields inside `con_product_info_${SelectCounter_id}`                        $(`#con_product_info_${SelectCounter_id}`).html(`                            <label for="Quantity_${Quantity_counter_id}">                                <input class="form-control" value="${data.current_stack}" min="1" id="Quantity_${++Quantity_counter_id}" type="number" placeholder="Quantity">                            </label>                            <label for="Price_${Price_counter_id}">                                <input class="form-control"  value="${data.unit_price}" id="price_${++Price_counter_id}" type="number" placeholder="Price">                            </label>                            <label for="date_${date_counter_id}">                                <input max="${Today}" class="form-control" id="date_${++date_counter_id}" type="date">                            </label>                        `);                    },                    error: function (xhr, status, error) {                        console.error('Error:', error);                    }                });            });        });    });    // Update the delete function to correctly reference 'mt-3'    document.addEventListener('click', (e) => {        if (e.target.closest('#btn_delete')) {            const row = e.target.closest('.mt-3');            row.remove();        }    });    // Handle form submission    $('#form_product_sales').submit(function (event) {        event.preventDefault();        var ProductArray = [];        // Collect static first product entry        var firstProduct = {            branch: $('#branch_1').val(),            productId: $('#product_1').val(),            quantity: $('#Quantity_1').val(),            price: $('#price_1').val(),            date: $('#date_1').val(),            EmployeeName: $('#Employee_1').val()        };        if (firstProduct.productId && firstProduct.quantity && firstProduct.price && firstProduct.date && firstProduct.branch && firstProduct.EmployeeName) {            ProductArray.push(firstProduct); // If true, then push the first product sale        }        // Loop through each dynamically added input fields to gather the data        container.find('.d-flex').each(function (index, element) {            var productId = $(element).find('select').val();            var quantity = $(element).find('input[type="number"][id^="Quantity_"]').val();            var price = $(element).find('input[type="number"][id^="price_"]').val();            var date = $(element).find('input[type="date"]').val();            var branch = $(element).find('input[type="text"][id^="branch_"]').val();            var EmployeeName = $(element).find('input[type="text"][id^="Employee_"]').val();            if (productId && quantity && price && date && branch && EmployeeName) {                ProductArray.push({                    productId: productId,                    quantity: quantity,                    price: price,                    date: date,                    branch: branch,                    EmployeeName: EmployeeName                });            }        });        $.ajax({            url: '../Models/CreateSales.php',            type: 'POST',            data: { products: ProductArray },            dataType: 'json',            encode: true,            success: function (response) {                if (response.errors && response.errors.stack === 'Insufficient stock') {                    $('#container_message').html(`                        <div class="alert alert-danger">                            <i class="fa-solid fa-triangle-exclamation"></i>                            ${response.errors.stack}                        </div>                    `);                }                if (response.message && response.message === 'Sales were successfully created!') {                    $('#container_message').html(`                        <div class="alert alert-success">                            <i class="fa-solid fa-circle-exclamation"></i>                            ${response.message}                        </div>                    `);                    setTimeout(() => { window.location.reload() }, 2000);                }                if (response.errors && response.errors.general) {                    $('#container_message').html(`                        <div class="alert alert-danger">                            <i class="fa-solid fa-circle-exclamation"></i>                            ${response.errors.general}                        </div>                    `);                }            }        });    });});